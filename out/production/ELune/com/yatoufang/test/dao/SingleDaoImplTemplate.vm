package cn.daxiang.lyltd.gameserver.module.${table.name}.dao.impl;

import cn.daxiang.framework.database.SingleEntity;
import cn.daxiang.framework.database.dao.SingleEntityDaoImpl;
import cn.daxiang.framework.identity.IdentiyKey;
import cn.daxiang.lyltd.gameserver.core.database.table.${table.name.substring(0, 1).toUpCase()};
import cn.daxiang.lyltd.gameserver.module.${table.name}.dao.Idol${table.name.substring(0, 1).toUpCase()};
import org.springframework.stereotype.Component;

/**
 * ${comment}
 * @author $!{email}
 * @since ${NOW}
 */
@Comment
public class ${table.name.substring(0, 1).toUpCase()}${table.name.substring(1)}DaoImpl extends SingleEntityDaoImpl implements ${table.name.substring(0, 1).toUpCase()}${table.name.substring(1)}Dao{

    @Override
    protected Class<? extends SingleEntity<?>> forClass() {
        return ${table.name.substring(0, 1).toUpCase()}${table.name.substring(1)}.class;
    }

    @Override
    protected void initMaxId() {
    }

    @Override
    public ${table.name.substring(0, 1).toUpCase()}${table.name.substring(1)} get${table.name.substring(0, 1).toUpCase()}${table.name.substring(1)}(long actorId, long targetId) {
        ${table.name.substring(0, 1).toUpCase()}${table.name.substring(1)} result = this.getMultiEnity(actorId, IdentiyKey.build(targetId));
        return result;
    }

    @Override
    public Pet create${table.name.substring(0, 1).toUpCase()}${table.name.substring(1)}(long actorId, int configId, int level, int aptitude, Map<Integer, Integer> attributeAptitudeMap) {
        long petId = this.idGenerator.increment(IdentiyKey.build(this.getClass()));
        Pet pet = Pet.valueOf(actorId, petId, configId, level, aptitude, attributeAptitudeMap);
        this.updateQueue(pet);
        return pet;
    }

    @Override
    public boolean isExist(long actorId) {
        return this.get(IdentiyKey.build(actorId)) == null;
    }
}